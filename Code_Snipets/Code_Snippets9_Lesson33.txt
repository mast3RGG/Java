Consider below code of Counter.java file:
public class Counter {
int count;
private static void increment (Counter counter) {
counter.count++;
}
public static void main(String[] args) {
Counter c1 = new Counter();
Counter c2 = c1;
Counter c3 = null;
c2.count = 1000;
increment(c2);
}
}
On executing Counter class, how many Counter objects are created in the memory?
A. 1
B. 2
C. 3
D. 4

Answer : C



--------------------------------



public class Test {
public static void main(String[] args) {
String res = "";
loop: for(int i = 1; i <= 5; i++) { //Line n1
switch(i) {
case 1:
res += "UP ";
break;
case 2:
res += "TO ";
break;
case 3:
break;
case 4:
res += "DATE";
break loop;

}
}
System.out.println(res);//UP TO DATE System.out.println(String.join("-", res.split(" "))); //Line n2
}
}
What will be the result of compiling and executing Test class?
i = 1
res = UP
i = 2
res = UP TO
i=3
res = UP TO
i=4
res = UP TO DATE
System.out.println(String.join("-",["UP","TO","DATE"]))//take the input from an array and join with delimiter specified
 System.out.println("UP-TO-DATE") //UP-TO-DATE


-----------------------

Consider below code of Test.java file:
public class Test {
public static void main(String[] args) {
String res = ""; //Line n1
String[] arr = {"Dog", null, "Friendly"};
for(Strings: arr) {//Line n2
res += String.join("-", s); //Line n3
}
System.out.println(res); //Line n4
}
}
What will be the result of compiling and executing Test class?
A. DogFriendly
B. Dog-Friendly
C. DognullFriendly
D. Dog-null-Friendly
E. NullPointerException is thrown
F. CompileTimeError

res = 1111
arr = {"Dog", null, "Friendly"}
s = Dog
res = + String.join("-","Dog") ="" + Dog = "Dog"
s = null
res = "Dog"+ String.join("-", null) = "Dognull"
s = Friendly
res = "Dognull" + String.join("-","Friendly") = "Dognull"+"Friendly"
res = "DognullFriendly"

Answer: C


--------------------------------


public static void main(String... args) {
String[][] chs = new String[2][];
chs[0] = new String[2];chs[1] = new String[5]; int i=97;
for (int a=0; a<chs.length;a++){
for (int b=0;b<chs.length;b++){
chs[a][b] = " "+i;
i++;
}
}
for (String[] ca:chs){
for (String c: ca ){
System.out.print(c + " ");
}
System.out.println();
}
}

Α. 97 98
99 100 null null null
Β. 97 98
99 100 101 102 103
C. Compilation fails.
D. NullPointer exception is thrown at runtime.
E. ArrayIndexOutOfBoundsException is thrown at runtime.

Answer : A


-----------------------


public static void main(String... args) {
String ta="A ";
ta = ta.concat("B");
String tb="C";
ta = ta.concat(tb);
ta.replace('C', 'D');
ta=ta.concat(tb);
System.out.println(ta);
}
A. ABCD
B. ACD
C. ABCC
D. ABD
E. ABD C
F. CompileTimeError
G. Some Problem at the runtime by JVM.
ta = "ABCC"
tb = "C" 

Answer : C


-------------------------


public class Test {
public static void main(String[] args) {
StringBuilder sb = new StringBuilder("B"); //Line n1
sb.append(sb.append("A")); //Line n2
System.out.println(sb); //Line n3
}
}
What will be the result of compiling and executing Test class?
A. B
B. BA
C. AB
D. BAB
E. ABA
F. ABAB
G. BABA
H. ABBA
I. CompilationError at line 2 

sb = "BA"
"BA". append("BA");
sb = "BABA" 

Answer : G

----------------------


public class Test {
public static void main(String[] args) {
String [] arr = {"1st", "2nd", "3rd", "4th", "5th"};
String place = "faraway";
System.out.println(arr[place.indexOf("a", 3)]); //Line n1
}
}
What will be the result of compiling and executing Test class?
A. 1st
B. 3rd
C. 4th
D. 5th
E. 2nd
F. Run TimeException
G. Compiletime Error at line n-1

arr[0] = 1st
arr[1]= 2nd
arr[2] = 3rd
arr[3] = 4th
arr[4] = 5th
place = "faraway"
System.out.println(arr[3]);
Answer: C