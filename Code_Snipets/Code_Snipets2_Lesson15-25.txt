class Test{
public static void main(String args[]){
int x=0;
switch(x){
case 0:System.out.println("hello");
break;//It is used to avoid fallthrough in switch
case 1:System.out.println("hi");
}
}
}
Predict the Output:
A.Compile Time Error
B. Some problem occured by jvm during execution
C.hello
hi
D. hello
Answer: D


-------------------------------------------------



class Test{
public static void main(String args[]){
for(int i=0; i<10; i++) {// i = 0,0<10(true), i = 1,1<10(true)
if(i==5)
break;//control will come out of the executing loop
System.out.println(i);//0,1,2,3,4
}
}
}
Predict the Output:
A.Compile Time Error
B. Some problem occured by jvm during execution
C.0 1 2 3 4
D. 012346789

Answer: C



----------------------------



class Test{
public static void main(String args[]){
int x=10;
11: {
System.out.println("begin");
if(x==10)
break 11;
System.out.println("end");
}
System.out.println("hello");
}
}
}
Predict the Output:
A.Compile Time Error
B. Some problem occured by jvm during execution
C. begin
end
D.Begin
  End
  Hello
F: None of the abve

Answer : E(begin and hello)



-----------------------------


class Test{
public static void main(String args[]){
int x=10;
if(x==10)
break;
System.out.println("hello");
}
}
Predict the Output:
A.Compile Time Error
B. Some problem occured by jvm during execution
C. hello
D. None of the above I
Answer: A (break can be used in switch, loop and labelled block, otherplace compile time error)

----------------------------


class Test{
public static void main(String args[]){
int x=2;
for(int i = 0; i<10;i++) {
if(i%x==0)
continue;//it will skip the current iteration and proceeds with next iteration System.out.println(i);
}
}
}
Predict the Output:
A. Compile Time Error
B. Some problem occured by jvm during execution
C. 02468
D. 13579
E. None of the above

Answer : D;


-------------------------------



class Test
{
public static void main(String args[]){
int x=10;
if(x==10)
continue;//continue can't be used here
System.out.println("hello");
}
}
Predict the Output:
A. Compile Time Error
B. Some problem occured by jvm during execution
C. hello
E. None of the above
Answer: A


------------------------------



class Test{
public static void main(String args[]){
int x=0;
switch(x){
case 0:System.out.println("hello");
continue;
case 1:System.out.println("hi");
}
}
}
Predict the Output:
A.Compile Time Error
B. Some problem occured by jvm during execution
C.hello
hi
D. hello
Answer: A(continue can be used only in loops and labelled block, otherplaces compile time error)

---------------------------



class Test{
public static void main(String args[]){
11:for(int i=0;i<3;i++) 
{
for(int j=0;j<3;j++)
{
if(i==j)
stmt1;
System.out.println(i+""+j);// 10 2021
}
}
}
}
replace stmt1 with break and predict the output? 
Answer:1 0 2 0 2 1
replace stmt1 with break and predict the output? Answer:10 2021
replace stmt1 with break 11 and predict the output?
Answer: no output
replace stmt1 with continue and predict the output?
Answer: 01, 02,10,12,20,21
replace stmt1 with continue 11 and predict the output?
Answer: 10 20 21



------------------------------



class Test{
public static void main(String args[]){
while(true){
System.out.println("hello");//line-n1
}
System.out.println("hi");//line-n2
}
}
Predict the output
A. Compile time error at line-n1
B. some problem occured during jvm execution.
C.Compile time error at line-n2
D. hello
hi
E. hello infinite times
F. None of the above

Answer: C(Concept of unreacheble


----------------------------------



class Test{
public static void main(String args[]){
if(true){
System.out.println("hello");//line-n1
}
else{
System.out.println("hi");//line-n2
}
}
}
Predict the output
A. compile time error at line-n1
B. some problem occured during jvm execution.
C.Compile time error at line-n2
D. hello
hi
E. hello
F. hi
G. None of the above

Answer: E
Concept of unreachable holds good only for loops, compiler will ignore unreachable for if else syntax.



-----------------------------



class Test{
public static void main(String[] args){
int x= 0;
do{
++x;
System.out.print(x);//1 4 8
I
if(++x<5)
continue;
++x;
System.out.print(x);//6 10 }while(++x<10);
}
}
JVM
x = 0,1,2,3,4,5,6,7,8,9,10,11
Output: 146810


-----------------------------------


class Test{
public static void main(String[] args){
for(int i=0;i++<5;i++){
System.out.println("hello");
i=i++;
}
}
}
How many times hello will be printed?
A. 4
B. 3
C. 5
D. 2

Answer : B

JVM
i =0,0<5(true), i =1,2
i = 2,2<5(true), i =3,4
i = 4,4<5(true), i =5,6
i = 6,6<5(false), i =7


--------------------------------


public class Test {
public static void main(String[] args) {
int i = 5;
System.out.print(i+++"");
System.out.print(i+"");
System.out.print(++i+"");
System.out.print(++i+i+++'"');
}
}
Predict the Output?
Α. 56716
Β. 66616
C. 57817
D. 67817

---------------------------


public class Test {
public static void main(String[] args) {
int i = 5;
System.out.print(i+++"");//5
System.out.print(i+"");//6
System.out.print(++i+"");//7
System.out.print(++i+i+++'''');//8 + 8 = 16
}
}
Predict the Output?
Α. 56716
Β. 66616
C. 57817
D. 67817
JVM
i = 5,6,7,8,9

Answer : A


----------------------------



public class Test {
public static void main(String[] args) {
int[] a ={0,2,4,1,3};
for (int i=0;i<a.length;i++)
a[i]= a[(a[i]+3)/a.length];
System.out.println(a[1]);
}
}
Predict the Output?
A. CompileTime Error
B. Some problem occured by jvm during execution
C. 0
D. 1
E. 3
F. None of the above

Answer: F(a[1] =2)


--------------------------------



public class Test {
public static void main(String[] args) {
int i =0,j=5;
for (;(i<3) && (j++<10); ){
System.out.print("" + i + "'" +j);
j++;
}
System.out.print(i +'"'" +j);
}
}
Predict the Output?
A. CompileTime Error
B. Some problem occured by jvm during execution
C. 06172838
D. 06172839
E. None of the above



JVM
i = 0,j =6, 0<3(true) && 5<10(true)
06
i =1, j= 7, 1<3(true) && 6<10(true)
17
i =2, j=8, 2<3(true) && 7<10(true)
28
i = 3, j =8 3<3(false)
38
Answer: C


--------------------------------------------



public class Test {
public static void main(String[] args) { for (int i=0;i<10;i+=2)
{// i = i + 2 System.out.print(i);
}
}
}
Predict the Output?
A. CompileTime Error
B. Some problem occured by jvm during execution
C. 02468
D. 13579
E. None of the above
Answer: C(print even numbers)


----------------------------------------


public class Test {
public static void main(String[] args) {
int x =5;
x*= 3*5 + 7*x-1+ ++x;// x *= 3*5 + 7*x -1 + ++x
= 3*5+7*5-1 + 6
=
15+35-1+6
x* = 55
x = x*5
= 55*5 = 275
System.out.println(x);
}
}
Predict the Output?
A. CompileTime Error
B. Some problem occured by jvm during execution
C. 330
D. 275
E. None of the Above

Answer: D;

----------------------------------

public class Test {
public static void main(String[] args) {
int a =3;
switch (a){
case 1: ++a;
case 2: a++;
case 3: a++;//4
default: ++a;//5
}
System.out.println(a);
}
}
Predict the Output?
A. CompileTime Error
B. Some problem occured by jvm during execution
C. 7
D. 5
Ε. 6
F.None of the above 
Answer D;


-------------------------------------


public class Test {
public static void main(String[] args) {
int i;
for (i=0;i<6 ;i++)
{
if (++i>3)
continue;
}
System.out.println(++i);
}
}
Predict the Output?
A. CompileTime Error
B. Some problem occured by jvm during execution
C. 7
D. 8
Ε. 6
F. None of the Above

i=1, 0<6(true), 1>3(false)
i=3, 2<6(true), 3>3(false)
i=5, 4<6(true), 5>3(true)
i=6, 6<6(false)
i = 7
Answer: C

============================


LESSON 23



===========================

What will be the result of compiling and executing Test class?
public class Test {
public static void main(String[] args) {
int a = 7;// a = 7,8,9
boolean res = a++ == 7 && ++a == 9 || a++ == 9; // 7==7(true) && 9==9(true) || a++=9 = true
System.out.println("a = " + a);
System.out.println("res = " + res);
}
}
A. a=10
res=true
B. a=9
res=true
C. a=10
res=false
D. compilation error
Answer: B


----------------------------------



class Fork {
public static void main(String[] args) {
if(args.length == 1 | args[1].equals("test"))
System.out.println("test case");
} else {
System.out.println("production " + args[0]);
}
}
}
And the command-line invocation:
java Fork live2
What is the result?
A. test case
B. production live2
C. test case live2
D. Compilation fails
E. An exception is thrown at runtime

JVM
args[0] = live2
args.length= 1
Answer: E(ArrayIndexOutOfBoundsException becoz args[1] is not available)


-----------------------------------------


public class Test {
public static void main(String[] args) {
int aVar = 9;// aVar = 10
if(aVar++ < 10) // if(9<10)true
System.out.println(aVar +" Hello World!");
else
System.out.println(aVar + " Hello Universe!");
}
}
A. 10 Hello World!
B. 9 Hello Universe!
C. 10 Hello World
D. Compilation fails.
Answer: A


-------------------------------------


public class Test {
public static void main(String[] args) {
int[] a = {1,2,3,4,5};
for (xxx)
{
System.out.print(a[e]);
}
}
}
Which option can replace xxx to enable the code to print 135?
A. int e = 0; e < = 4; e++
B. int e = 0; e < 5; e + = 2
C. int e = 1; e < = 5; e + = 1
D. int e = 1; e < 5; e+ =2
a[0] = 1
a[1]= 2
a [2] = 3
a[3] = 4
a[4] = 5
Answer: B(becoz it should print data present in even index only)


---------------------------------


public class Test {
public static void main(String[] args) {
int num = 5;//num=5,4
do{
System.out.println(num-- + "");//System.out.println(5)
}while (num == 0);
4==0(false)
}
}
What is the result?
Α. 5 4 3 2 10
B. 54321
C. 4 2 1
D. 5
E. Nothing is printed
F. 4
G. CompileTimeError
Answer: D


-----------------------



public class Test{
public static void main(String[] args) {
int ii=0;
int jj=7;
for (ii=0;ii<jj-1;ii=ii+2){
System.out.print(ii);
}
}
}
What is the result?
A. 2 4
B. 0246
C. 024
D. Compilation fails
JVM
ii =0,0<6(true)
ii=2, 2<6(true)
ii=4,4<6(true)
ii=6, 6<6(false)
Answer: 0 2 4


-----------------------------


public class Test {
public static void main(String[] args) {
//line-3
array[0] = 10;
array[1] = 20;
System.out.print(array[0]+":" array[1]);
}
}
Which code fragment, when inserted at line 3, enables the code to print 10:20?
A. int[] array n= new int[2];
B. int[] array;
array = int[2];
C. int array = new int[2];
D. int array [2];
JVM
A. int[] array n= new int[2];//invalid identifer
B. int[] array;//array declaration array = new int[2];//array initialization
C. int array = new int[2];//[] is missing
D. int array [2];//new is missing


----------------------------------



public class Test {
public static void main(String[] args) {
boolean opt =true;
switch (opt){
case true:System.out.print("True");
break;
default : System.out.print("***");
}
I System.out.print("Done");
}
}
Predict the Output?
A. CompileTime Error.
B. Some problem occured by jvm during execution.
C. True
Done
D. True
***
Done
E. None of the above.


Note:
switch(arg)
|-> byte---> Byte
|-> short--->Short
|-> int ---> Integer
|-> char ---> Character
|->String
|-> enum
Answer: A
---------------------------------------



public class Test {
public static void main(String[] args) {
int intArr[] = {15,30,45,60,75};
intArr[2] =intArr[4];
intArr[4] = 90;
}
}
What are the values of each element in intArr after this code has executed?
Α. 15, 60, 45, 90, 75
B. 15, 90, 45, 90, 75
C. 15, 30, 75, 60, 90
D. 15, 30, 90, 60, 90
Ε. 15, 4, 45, 60, 90
intArr[0] = 15
intArr[1] = 30
intArr[2] = 45,75
intArr[3] = 60
intArr[4] = 75,90 I
Output: 15,30,75,60,90

Answer : C

